---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/Layout.astro';

export async function getStaticPaths(): Promise<{params: {tag: string}, props: {posts: any}}[]>{
  const allPosts = await getCollection('posts');

  const uniqueTags = [...new Set(allPosts.map((post) => post.data.tags).flat())];

 return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) => post.data.tags.includes(tag));
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;

function formatDate(dateString: string) {
  const options: Intl.DateTimeFormatOptions = { year: 'numeric', month: 'long', day: 'numeric' };
  return new Intl.DateTimeFormat('zh-CN', options).format(new Date(dateString));
}
---
<BaseLayout title={tag}>
    <p>以下是包含「{tag}」标签的文章</p>
    {
      posts.map((post: any) => (
        <li class="block sm:flex sm:gap-2 my-[15px] px-5 py-2 rounded-md shadow-md shadow-slate-50">
          <a  href={"/posts/" + post.slug}><img
            src={post.data.image.url}
            alt={post.data.title}
            class="w-[400px] h-[200px] rounded-md hover:scale-105 transition-transform duration-500"
           /></a>
          <div class="flex flex-col gap-2">
            <a href={"/posts/" + post.slug}>
              <span class="text-xl font-bold">{post.data.title}</span>
            </a>
            <p class="text-sm">{formatDate(post.data.pubDate.toString())}</p>
            <p class="">{post.data.description}</p>
            <p class="hidden sm:block"> {post.data.tags.map((tag: string) => {
              return <span class="text-sm bg-slate-200 px-2 py-1 rounded-md mr-3 text-blue-300">{tag}</span>
            })} </p>
           
          </div>
        </li>
      ))
    }
</BaseLayout>